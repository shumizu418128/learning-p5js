version: '3.8'

services:
  # PostgreSQL データベース
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: kidscode
      POSTGRES_PASSWORD: kidscode_password
      POSTGRES_DB: kidscode_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - kidscode-network

  # Redis キャッシュ
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kidscode-network

  # バックエンド API サーバー
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - PORT=8000
      - DATABASE_URL=postgresql://kidscode:kidscode_password@postgres:5432/kidscode_db
      - REDIS_URL=redis://redis:6379
      - FRONTEND_URL=http://localhost:3000
      - GEMINI_MODEL=gemini-2.5-flash-lite-preview-06-17
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/logs:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - kidscode-network
    command: npm run dev

  # フロントエンド開発サーバー
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - kidscode-network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  kidscode-network:
    driver: bridge
